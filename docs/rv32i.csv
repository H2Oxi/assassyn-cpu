mnemonic,inst_type,alu_op,alu_in1_sel,alu_in2_sel,cmp_op,cmp_out_used,adder_use,add_in1_sel,add_in2_sel,add_postproc,addr_purpose,wb_source,wb_en_cond,rf_ra_sel,rf_rb_sel,rf_w_sel,rf_wdata_sel,mem_read,mem_write,mem_wdata_sel,mem_wstrb,notes
add,R,ADD,RS1,RS2,NONE,0,NONE,ZERO,ZERO,NONE,NONE,ALU,(rd!=x0),rs1,rs2,rd,ALU,0,0,NONE,NONE,"rd := rs1 + rs2"
sub,R,SUB,RS1,RS2,NONE,0,NONE,ZERO,ZERO,NONE,NONE,ALU,(rd!=x0),rs1,rs2,rd,ALU,0,0,NONE,NONE,"rd := rs1 - rs2"
and,R,AND,RS1,RS2,NONE,0,NONE,ZERO,ZERO,NONE,NONE,ALU,(rd!=x0),rs1,rs2,rd,ALU,0,0,NONE,NONE,"rd := rs1 & rs2"
andi,I,AND,RS1,IMM_I,NONE,0,NONE,ZERO,ZERO,NONE,NONE,ALU,(rd!=x0),rs1,NONE,rd,ALU,0,0,NONE,NONE,"rd := rs1 & sext(imm12)"
or,R,OR,RS1,RS2,NONE,0,NONE,ZERO,ZERO,NONE,NONE,ALU,(rd!=x0),rs1,rs2,rd,ALU,0,0,NONE,NONE,"rd := rs1 | rs2"
ori,I,OR,RS1,IMM_I,NONE,0,NONE,ZERO,ZERO,NONE,NONE,ALU,(rd!=x0),rs1,NONE,rd,ALU,0,0,NONE,NONE,"rd := rs1 | sext(imm12)"
xori,I,XOR,RS1,IMM_I,NONE,0,NONE,ZERO,ZERO,NONE,NONE,ALU,(rd!=x0),rs1,NONE,rd,ALU,0,0,NONE,NONE,"rd := rs1 ^ sext(imm12)"
sll,R,SLL,RS1,RS2,NONE,0,NONE,ZERO,ZERO,NONE,NONE,ALU,(rd!=x0),rs1,rs2,rd,ALU,0,0,NONE,NONE,"shamt=rs2[4:0]; rd := rs1<<shamt"
slli,I,SLL,RS1,IMM_SHAMT5,NONE,0,NONE,ZERO,ZERO,NONE,NONE,ALU,(rd!=x0),rs1,NONE,rd,ALU,0,0,NONE,NONE,"shamt=imm[4:0]; rd := rs1<<shamt"
srl,R,SRL,RS1,RS2,NONE,0,NONE,ZERO,ZERO,NONE,NONE,ALU,(rd!=x0),rs1,rs2,rd,ALU,0,0,NONE,NONE,"logical; shamt=rs2[4:0]"
srli,I,SRL,RS1,IMM_SHAMT5,NONE,0,NONE,ZERO,ZERO,NONE,NONE,ALU,(rd!=x0),rs1,NONE,rd,ALU,0,0,NONE,NONE,"logical; shamt=imm[4:0]"
sra,R,SRA,RS1,RS2,NONE,0,NONE,ZERO,ZERO,NONE,NONE,ALU,(rd!=x0),rs1,rs2,rd,ALU,0,0,NONE,NONE,"arithmetic; shamt=rs2[4:0]"
srai,I,SRA,RS1,IMM_SHAMT5,NONE,0,NONE,ZERO,ZERO,NONE,NONE,ALU,(rd!=x0),rs1,NONE,rd,ALU,0,0,NONE,NONE,"arithmetic; shamt=imm[4:0]"
sltu,R,SLTU,RS1,RS2,NONE,0,NONE,ZERO,ZERO,NONE,NONE,ALU,(rd!=x0),rs1,rs2,rd,ALU,0,0,NONE,NONE,"rd := (rs1 < rs2) unsigned ? 1:0"
addi,I,ADD,RS1,IMM_I,NONE,0,NONE,ZERO,ZERO,NONE,NONE,ALU,(rd!=x0),rs1,NONE,rd,ALU,0,0,NONE,NONE,"rd := rs1 + sext(imm12)"
lui,U,NONE,ZERO,ZERO,NONE,0,NONE,ZERO,ZERO,NONE,NONE,IMM_LUI,(rd!=x0),NONE,NONE,rd,IMM_LUI,0,0,NONE,NONE,"rd := U-imm<<12"
auipc,U,NONE,ZERO,ZERO,NONE,0,PC_REL,PC,UIMM<<12,NONE,NONE,ADDER,(rd!=x0),NONE,NONE,rd,ADDER,0,0,NONE,NONE,"rd := PC + (U-imm<<12)"
lw,I,NONE,ZERO,ZERO,NONE,0,EA,RS1,IMM_I,NONE,EA,LOAD,(rd!=x0),rs1,NONE,rd,LOAD,1,0,NONE,NONE,"EA := rs1 + sext(imm12); rd := Mem[EA] (32b)"
lbu,I,NONE,ZERO,ZERO,NONE,0,EA,RS1,IMM_I,NONE,EA,LOAD_ZEXT8,(rd!=x0),rs1,NONE,rd,LOAD_ZEXT8,1,0,NONE,NONE,"EA := rs1 + sext(imm12); rd := zext8(Mem[EA])"
sw,S,NONE,ZERO,ZERO,NONE,0,EA,RS1,IMM_S,NONE,EA,NONE,0,rs1,rs2,NONE,NONE,0,1,RS2,0xF,"EA := rs1 + sext(imm12_S); Mem[EA] := rs2[31:0]"
beq,B,NONE,RS1,RS2,EQ,1,BR_TARGET,PC,IMM_B<<1,NONE,BR_TARGET,NONE,0,rs1,rs2,NONE,NONE,0,0,NONE,NONE,"if (rs1==rs2) PC:=PC+immB; else PC+=4"
bne,B,NONE,RS1,RS2,NE,1,BR_TARGET,PC,IMM_B<<1,NONE,BR_TARGET,NONE,0,rs1,rs2,NONE,NONE,0,0,NONE,NONE,"if (rs1!=rs2) branch"
blt,B,NONE,RS1,RS2,LT,1,BR_TARGET,PC,IMM_B<<1,NONE,BR_TARGET,NONE,0,rs1,rs2,NONE,NONE,0,0,NONE,NONE,"signed <"
bge,B,NONE,RS1,RS2,GE,1,BR_TARGET,PC,IMM_B<<1,NONE,BR_TARGET,NONE,0,rs1,rs2,NONE,NONE,0,0,NONE,NONE,"signed >="
bltu,B,NONE,RS1,RS2,LTU,1,BR_TARGET,PC,IMM_B<<1,NONE,BR_TARGET,NONE,0,rs1,rs2,NONE,NONE,0,0,NONE,NONE,"unsigned <"
bgeu,B,NONE,RS1,RS2,GEU,1,BR_TARGET,PC,IMM_B<<1,NONE,BR_TARGET,NONE,0,rs1,rs2,NONE,NONE,0,0,NONE,NONE,"unsigned >="
jal,J,NONE,ZERO,ZERO,NONE,0,J_TARGET,PC,IMM_J<<1,NONE,BR_TARGET,PC_PLUS4,(rd!=x0),NONE,NONE,rd,PC_PLUS4,0,0,NONE,NONE,"PC := PC+immJ; rd := PC+4（来自 IF 的 pc_plus4）"
jalr,I,NONE,RS1,IMM_I,NONE,0,IND_TARGET,RS1,IMM_I,CLR_LSB,IND_TARGET,PC_PLUS4,(rd!=x0),rs1,NONE,rd,PC_PLUS4,0,0,NONE,NONE,"t=rs1+sext(imm); PC:=t&~1; rd := PC+4"
fence,SYS,NONE,ZERO,ZERO,NONE,0,NONE,ZERO,ZERO,NONE,NONE,NONE,0,NONE,NONE,NONE,NONE,0,0,NONE,NONE,"序约束；对数据通路无操作"
ecall,SYS,NONE,ZERO,ZERO,NONE,0,NONE,ZERO,ZERO,NONE,NONE,NONE,0,NONE,NONE,NONE,NONE,0,0,NONE,NONE,"同步陷入；PC/CSR 由陷入逻辑处理"
ebreak,SYS,NONE,ZERO,ZERO,NONE,0,NONE,ZERO,ZERO,NONE,NONE,NONE,0,NONE,NONE,NONE,NONE,0,0,NONE,NONE,"断点陷入；无 GPR 写回"
mret,SYS,NONE,ZERO,ZERO,NONE,0,NONE,ZERO,ZERO,NONE,NONE,NONE,0,NONE,NONE,NONE,NONE,0,0,NONE,NONE,"PC:=mepc；mstatus 更新；无 GPR 读写"